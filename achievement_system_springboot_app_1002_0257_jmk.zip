// 代码生成时间: 2025-10-02 02:57:48
package com.example.achievementsystem;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.springframework.web.bind.annotation.RestControllerAdvice;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.http.HttpStatus;
import java.util.HashMap;
import java.util.Map;

@SpringBootApplication
@RestController
@RequestMapping("/api")
public class AchievementSystemApplication {

    private static final Map<String, String> achievements = new HashMap<>();

    public static void main(String[] args) {
        SpringApplication.run(AchievementSystemApplication.class, args);
    }
# NOTE: 重要实现细节

    @PostMapping("/achievements")
    public ResponseEntity<String> createAchievement(@RequestBody String achievementName) {
        achievements.put(achievementName, "Unlocked");
        return ResponseEntity.ok(achievementName + " achievement unlocked!");
    }
# TODO: 优化性能

    @GetMapping("/achievements/{achievementName}")
    public ResponseEntity<String> getAchievement(@PathVariable String achievementName) {
        if (!achievements.containsKey(achievementName)) {
            return ResponseEntity.notFound().build();
# 改进用户体验
        }
        return ResponseEntity.ok(achievements.get(achievementName));
    }
}

@RestControllerAdvice
class AchievementExceptionHandler {
    @ResponseStatus(HttpStatus.NOT_FOUND)
    @ExceptionHandler(NoSuchElementException.class)
    public String handleNoSuchElementException(NoSuchElementException ex) {
        return "No achievement found with the given ID.";
    }

    @ResponseStatus(HttpStatus.BAD_REQUEST)
    @ExceptionHandler(IllegalArgumentException.class)
    public String handleIllegalArgumentException(IllegalArgumentException ex) {
# FIXME: 处理边界情况
        return ex.getMessage();
    }
# FIXME: 处理边界情况
}