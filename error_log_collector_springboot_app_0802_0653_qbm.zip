// 代码生成时间: 2025-08-02 06:53:17
package com.example.errorlogcollector;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.bind.annotation.RequestMapping;
import static org.springframework.http.HttpStatus.INTERNAL_SERVER_ERROR;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.ExceptionHandler;
import org.springframework.web.bind.annotation.ResponseStatus;
import javax.validation.Valid;
import java.util.Map;

@SpringBootApplication
@RestController
@RequestMapping("/api")
public class ErrorLogCollectorApplication {

    public static void main(String[] args) {
        SpringApplication.run(ErrorLogCollectorApplication.class, args);
    }

    @PostMapping("/log")
    public ResponseEntity logError(@Valid @RequestBody Map<String, Object> errorDetails) {
        // Logic to handle the error logging
        // For example, store the error details in a database
        
        // Placeholder for actual logging logic
        System.out.println("Error logged: " + errorDetails);
        
        return ResponseEntity.ok("Error logged successfully");
    }

    @ExceptionHandler(Exception.class)
    @ResponseStatus(INTERNAL_SERVER_ERROR)
    public ResponseEntity handleError(Exception e) {
        // Log the exception details
        e.printStackTrace();
        
        // Return a generic error message to the client
        return ResponseEntity.status(INTERNAL_SERVER_ERROR).body("An error occurred while processing your request");
    }

}

// Exception handling controller advice
package com.example.errorlogcollector;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.RestControllerAdvice;
import org.springframework.web.bind.MethodArgumentNotValidException;
import org.springframework.web.bind.annotation.ExceptionHandler;
import org.springframework.web.bind.annotation.ResponseStatus;
import static org.springframework.http.HttpStatus.BAD_REQUEST;
import java.util.HashMap;
import java.util.Map;

@RestControllerAdvice
public class ErrorLogCollectorControllerAdvice {

    @ExceptionHandler(MethodArgumentNotValidException.class)
    @ResponseStatus(BAD_REQUEST)
    public ResponseEntity<Map<String, String>> handleValidationExceptions(MethodArgumentNotValidException ex) {
        Map<String, String> errors = new HashMap<>();
        ex.getBindingResult().getFieldErrors().forEach(error ->
                errors.put(error.getField(), error.getDefaultMessage()));
        return ResponseEntity.badRequest().body(errors);
    }
}
